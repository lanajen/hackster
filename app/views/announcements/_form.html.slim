.medium-status-bar.affixable
  .static
  .affixed
    .inner
      .pull-left= render partial: 'shared/medium_status', locals: { last_edit: @announcement.updated_at }
      .pull-right
        ==> content_tag :a, "#{content_tag(:i, '', class: 'fa fa-check')} Finish editing".html_safe, class: 'btn btn-success medium-edit-stop btn-sm', href: tech_announcement_path(@announcement)
        ==> link_to "Publish", '', class: 'btn btn-warning btn-sm is-draft', id: 'publish', style: "#{'display:none;' unless @announcement.draft? }"
        ==> link_to "Unpublish", '', class: 'btn btn-warning btn-sm is-published', id: 'unpublish', style: "#{'display:none;' if @announcement.draft? }"
        ==> link_to 'Delete', announcement_path(@announcement), class: 'btn btn-danger btn-sm', data: { method: :delete, confirm: "Are you sure? There's no way back!" }
        ==> link_to 'Cancel', tech_announcements_path(@tech.user_name), class: 'btn btn-link btn-sm'
      .clearfix

#model-editor*{ data: { 'model-id' => @announcement.id, 'model-type' => 'ThreadPost', 'model-symbol' => 'announcement', 'model-placeholder' => 'What have you been up to? Enter text or add media by clicking the left button.', 'model-url' => '/api/v1/announcements' } }

  h3.mg-20
    span.editable-attribute*{ 'data-model' => "announcement", 'data-attribute' => "title", 'data-default-text' => "Untitled", 'data-view-tpl' => "*value*", 'data-value' => @announcement.title_not_default }
    small
      span.is-draft  style="#{'display:none;' unless @announcement.draft? }"  (draft)
      span.is-published  style="#{'display:none;' if @announcement.draft? }"  (published)
  = render partial: 'shared/medium_editor', locals: { editable: @announcement.body, attribute_name: 'body' }

= content_for :js do
  javascript:
    $(function(){
      editor.activate();

      $('#publish').click(function(e){
        e.preventDefault();
        setAnnouncementDraftMode(false);
      });

      $('#unpublish').click(function(e){
        e.preventDefault();
        setAnnouncementDraftMode(true);
      });

      function setAnnouncementDraftMode(mode) {
        data = { announcement: { draft: mode } };
        editor.saveModel(function(){
          $('.is-draft, .is-published').toggle();
        }, null, data);
      }
    });

h2.cart-title Your cart
- if @order_lines.any?
  .row
    .col-md-8
      .box
        .box-content
          table.table.table-hover
            thead
              th Product
              th Cost
              th
            tbody
              - @order_lines.each do |line|
                tr
                  td= link_to line.store_product.source.name, line.store_product.source
                  td
                    - if line.store_product.unit_cost.zero?
                      | Free
                    - else
                      = pluralize line.store_product.unit_cost, 'point'
                  td.text-right= link_to 'Remove', store_cart_path(line), class: 'btn btn-xs btn-link', data: { method: :delete }
            tfooter
              tr
                td.order-label Shipping cost
                td.order-cost
                  - if current_order.shipping_cost_in_currency
                    - if current_order.shipping_cost_in_currency > 0
                      = number_to_currency current_order.shipping_cost_in_currency
                      small<= link_to content_tag(:i, '', class: 'fa fa-question-circle'), 'http://hackster.uservoice.com/knowledgebase/articles/639226-how-does-shipping-work', target: '_blank'
                    - else
                      | Free
                  - else
                    = link_to 'Select an address', addresses_path(order_id: current_order.id, redirect_if_empty: true)
                td


              tr
                td
                  strong Total cost
                td
                  strong class=(current_order.enough_points? ? 'text-success' : 'text-danger')
                    = pluralize current_order.total_cost, 'point'
                    - if current_order.shipping_cost_in_currency
                      - if current_order.shipping_cost_in_currency > 0
                        small< + #{number_to_currency current_order.shipping_cost_in_currency}
                    - else
                      small< + shipping
                td.text-right
                  - if current_order.enough_points?
                    .label.label-success.label-order You have enough points!
                  - else
                    .label.label-danger.label-order Oh shoot, you're missing #{pluralize number_with_delimiter(-current_order.points_delta), 'point'} for this order.

    .col-md-4
      .address
        - if current_order.address
          p.clearfix
            strong.pull-left Shipping to:
            small.pull-right= link_to 'Update', addresses_path(order_id: current_order.id)
          = current_order.address.decorate.full.html_safe
        - else
          ' Please
          => link_to 'select an address', addresses_path(order_id: current_order.id, redirect_if_empty: true)
          | before placing your order.

      - if current_order.can_pass_order?
        .store-actions.text-center
          p After you place this order you will have #{pluralize number_with_delimiter(current_order.after_points), 'point'} left to redeem.
          - if current_order.might_pay_duty?
            p.alert.alert-danger
              ' By placing this order you understand and agree that
              strong you may have to pay import taxes on reception of the package
              | .
          - if current_order.high_risk?
            p.alert.alert-danger
              ' Please note that we have had a high number of packages lost on their way to #{current_order.address.country}. There is no tracking once the package leaves the US, and we are not responsible for lost packages. By placing this order you understand and agree that
              strong this order is being shipped at your own risks and that Hackster, Inc. will not be responsible for losses
              | .
          p
            - if current_order.shipping_cost_in_currency.zero?
              => link_to 'Confirm order', confirm_store_orders_path(id: current_order.id), class: 'btn btn-primary', data: { method: :patch }
            - else
              => link_to 'Pay shipping and confirm order', '#', class: 'btn btn-primary', id: 'pay'
              = content_for :js do
                = javascript_include_tag 'https://checkout.stripe.com/checkout.js'
                javascript:
                  var handler = StripeCheckout.configure({
                    key: "#{ENV['STRIPE_PUBLIC_KEY']}",
                    image: "#{asset_url('hackster_logo_squared.png')}",
                    token: function(token) {
                      $.ajax({
                        type: 'POST',
                        url: "#{payments_path}",
                        dataType: 'json',
                        data: {
                          safe_id: "#{current_order.payment.safe_id}",
                          authenticity_token: "#{form_authenticity_token}",
                          stripeToken: token.id
                        },
                        success: function(data) {
                          if (data.status == 'ok') {
                            window.location.href = data.redirect_to;
                          } else {
                            alert(data.message);
                          }
                        },
                        error: function(data) {
                          alert("Something failed, please contact us at help@hackster.io");
                        }
                      });
                    }
                  });

                  $('#pay').on('click', function(e) {
                    // Open Checkout with further options
                    handler.open({
                      name: 'Hackster, Inc.',
                      description: "#{current_order.payment.label}",
                      amount: #{current_order.payment.stripe_amount},
                      email: "#{current_order.payment.recipient_email}",
                      bitcoin: true,
                    });
                    e.preventDefault();
                  });

                  // Close Checkout on page navigation
                  $(window).on('popstate', function() {
                    handler.close();
                  });

            ' or
            = link_to 'keep browsing', store_path

      - elsif current_order.errors[:base].any?
        .store-actions
          p
            strong> Oh shoot!
            = current_order.errors[:base].first

- else
  p
    ' Your cart is empty.
    = link_to 'Get free hardware', store_path
= f.simple_fields_for :widgets, widget, wrapper: false do |f_widget|
  table#sortable.sortable-table.table.table-hover
    tbody
      = f_widget.simple_fields_for :parts do |f_part|
        = render partial: 'widgets/embeds/form/part', locals: { f: f_part }
      tr.sortable-disabled
        td= f_widget.link_to_add 'Add another part', :parts, class: 'btn btn-success btn-sm btn-block'

= content_for :js do
  javascript:
    jQuery(function($) {
      window.NestedFormEvents.prototype.insertFields = function(content, assoc, link) {
        var $tr = $(link).closest('tr');
        content = content.replace(/^<div class="fields">/,"");
        content = content.replace(/<\/div>$/,"");
        return $(content).insertBefore($tr);
      }

      $('form').on('nested:fieldAdded', function(event){
        var field = event.field;
        previousPosition = field.prev().find('input.position').val();
        if (isNaN(previousPosition)) previousPosition = 0;
        positionField = field.find('input.position');
        positionField.val(parseInt(previousPosition) + 1);
      })

      $('form').on('nested:fieldRemoved', function(event){
        event.field.addClass('removed');
        resetPositions();
      })

      $(function() {
        $('#sortable tbody')
          .sortable({ handle: ".handle", containment: "#sortable", items: 'tr:not(.sortable-disabled)' })
          .bind('sortupdate', function(event, ui) {
            resetPositions();
          });
      });

      function resetPositions(){
        $('#sortable tbody tr:not(.removed) input.position').each(function(i){
          $(this)
            .val(i+1)
            .trigger('change');
        });
      }
    });
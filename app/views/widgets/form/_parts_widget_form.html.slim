- widget.parts.new if widget.parts.empty?
table#sortable.table.table-condensed
  thead
    th
    th Short description
    th Vendor name
    th Link to vendor
    th Quantity
    th Unit&nbsp;price&nbsp;
    th Total
    th
  tbody
    - @widget.parts.each do |part|
      = f.simple_fields_for :parts, part, wrapper: false do |f_part|
        tr.fields
          td
            i.fa.fa-arrows.handle
            = f_part.input :id, as: :hidden
            = f_part.input :position, as: :hidden, input_html: { class: 'position' }
          td= f_part.input :description, label: false
          td= f_part.input :vendor_name, label: false
          td= f_part.input :vendor_link, label: false
          td= f_part.input :quantity, label: false, input_html:   min: 0 }, input_html: { class: 'quantity'  
          td= f_part.input :unit_price, label: false, input_html:   min: 0 }, input_html: { class: 'unit-price'  
          td.total-price= number_to_currency part.total_cost
          td= f_part.link_to_remove content_tag(:i, '', class: 'fa fa-trash-o'), class: 'btn btn-xs btn-danger'
    tr.sortable-disabled
      td  colspan: 6  = f.link_to_add 'Add a part', :parts, class: 'btn btn-xs btn-success'
      td.bom-total-price= number_to_currency (@widget.total_cost ? @widget.total_cost : 0)
      td
/ %p.help-block
  | You can find part #'s from
  = link_to 'Octopart.', 'http://www.octopart.com', target: '_blank'
  | Prices will be automatically fetched from there.


= content_for :js do
  javascript:
    | jQuery(function($) {
      | window.NestedFormEvents.prototype.insertFields = function(content, assoc, link) {
        | var $tr = $(link).closest('tr');
        | content = content.replace(/^<div class="fields">/,"");
        | content = content.replace(/<\/div>$/,"");
        | return $(content).insertBefore($tr);
      | }

      | $('form').on('nested:fieldAdded', function(event){
        | var field = event.field;
        | previousPosition = field.prev().find('input.position').val();
        | if (isNaN(previousPosition)) previousPosition = 0;
        | positionField = field.find('input.position');
        | positionField.val(parseInt(previousPosition) + 1);
        | $('.total-price', field).text('$0.00');
      | })

      | $('form').on('nested:fieldRemoved', function(event){
        | event.field.addClass('removed');
        | resetPositions();
      | })

      | $(function() {
        | $('#sortable tbody')
          .sortable( handle: ".handle", containment: "#sortable", items: 'tr:not(.sortable-disabled)' )
          .bind('sortupdate', function(event, ui) {
            | resetPositions();
          | });
      | });

      | function resetPositions(){
        | $('#sortable tbody tr:not(.removed) input.position').each(function(i){
          | $(this)
            .val(i+1)
            .trigger('change');
        | });
      | }

      | $('form').on('change keyup', 'input.quantity,input.unit-price', function(){
        | field = $(this).parents('.fields');
        | updateTotal(field);
      | });

      | function updateTotal(field) {
        | quantity = $('.quantity', field).val();
        | price = $('.unit-price', field).val();
        | if (quantity != '' && price != '') {
          | total = quantity * price;
          | total = '$' + total.toFixed(2);
          | $('.total-price', field).text(total);
          | updateBomTotal();
        | }
      | }

      | function updateBomTotal() {
        | bomTotal = 0;
        | $('.total-price').each(function(i,el){
          | total = $(el).text().replace('$', '');
          | bomTotal += parseFloat(total);
        | })
        | bomTotal = '$' + bomTotal.toFixed(2);
        | $('.bom-total-price').text(bomTotal);
      | }
    | });

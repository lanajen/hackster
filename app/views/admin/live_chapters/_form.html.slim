= f.error_notification

= f.input :event_type, collection: LiveChapter::EVENT_TYPES
= f.input :full_name
= f.input :home_link
= f.input :virtual, as: :boolean, label: false, inline_label: 'Virtual'
= f.input :city, hint: "Include state if relevant. Leave blank if virtual"
= f.input :country, hint: "Leave blank if virtual", input_html: { class: 'form-control' }
/ # = f.input :organizer_id, input_html: { class: 'select2' }, collection: @live_chapter.decorate.organizer_collection_for_form, prompt: 'Select a user (type in their name)'

.row
  .col-sm-4
    label.control-label Members and organizers
  .col-sm-8
    table#sortable.table.table-condensed
      thead
        th User
        th Role
        th
      tbody
        - (@live_chapter.members.includes(:user).sort_by{|m| m.user.name } + [@live_chapter.members.new]).each do |member|
          = f.simple_fields_for :members, member, wrapper: false do |f_member|
            tr.fields
              - if member.persisted?
                td= link_to member.user.name, member.user
              - else
                td= f_member.input :user_id, input_html: { class: 'select2' }, label: false, collection: [], prompt: 'Select a user (type in their name)'
              td= f_member.input :group_roles, collection: LiveChapterMember.group_roles, label: false
              td= f_member.link_to_remove content_tag(:i, '', class: 'fa fa-trash-o'), class: 'btn btn-sm btn-danger'
        tr.sortable-disabled
          td  colspan=4  = f.link_to_add 'Add a member', :members, class: 'btn btn-xs btn-success nested-field-table'

= render partial: 'shared/image_form', locals: { file_type: 'cover_image', human_file_type: 'Cover image', image_link: @live_chapter.cover_image.try(:imgix_url, :cover_mini_thumb), attribute_type: 'cover_image', image_version: 'cover_mini_thumb', model: 'group', help_block: '' }

.col-md-offset-4.col-md-8
  ==> f.button :submit, :class => 'btn btn-primary'
  = link_to t('.cancel', :default => t("helpers.links.cancel")), admin_live_chapters_path, :class => 'btn btn-default'

= content_for :head do
  = stylesheet_link_tag "//cdnjs.cloudflare.com/ajax/libs/select2/4.0.0/css/select2.min.css"

= content_for :js do
  = javascript_include_tag "//cdnjs.cloudflare.com/ajax/libs/select2/4.0.0/js/select2.min.js"

  javascript:
    $(function() {
      var select2Options = {
        placeholder: 'Select a user',
        minimumInputLength: 3,
        width: '100%',

        ajax: {
          url: Utils.getApiPath() + "/private/users/autocomplete",
          dataType: 'json',
          delay: 250,
          xhrFields: {
            withCredentials: true
          },
          data: function (params) {
            return {
              q: params.term, // search term
              page: params.page
            };
          },
          processResults: function (data, page) {
            return {
              results: data
            };
          },
          cache: true
        }
      };

      $('form .select2').select2(select2Options);
    });
Searching 27954 files for "ImageHelpers" (whole word)

/Users/Zenko/Sites/Hackster/hackster/app/assets/javascripts/contest_csv_exporter/app.js:
    1  import React, {Component, PropTypes} from 'react';
    2  import { generateCSV, getFileDetails } from '../utils/ReactAPIUtils';
    3: import ImageHelpers from '../utils/Images';
    4  
    5  export default class App extends Component {
    .
   22        .then(response => {
   23          fileId = response.body.file_id;
   24:         return ImageHelpers.pollJob(response.body.job_id);
   25        })
   26        .then(response => {

/Users/Zenko/Sites/Hackster/hackster/app/assets/javascripts/editor/actions/editor.js:
    1  import { Editor } from '../constants/ActionTypes';
    2  import Request from '../utils/Requests';
    3: import ImageHelpers from '../../utils/Images';
    4  import _ from 'lodash';
    5  
    .
  337    return function(dispatch) {
  338      files.forEach(file => {
  339:       return ImageHelpers.getS3AuthData(file.name)
  340          .then(data => {
  341:           return ImageHelpers.postToS3(data, file, S3BucketURL, AWSAccessKeyId);
  342          })
  343          .then(url => {
  344:           return ImageHelpers.postURLToServer(url, projectId, csrfToken, 'image', 'tmp-file-0');
  345          })
  346          .then(response => {

/Users/Zenko/Sites/Hackster/hackster/app/assets/javascripts/image_uploader/app.js:
    3  import DropZone from './DropZone';
    4  import ImageUploader from  './ImageUploader';
    5: import ImageHelpers from '../utils/Images';
    6  
    7  export default class App extends Component {
    .
   41      this.setState({ isWorking: true });
   42  
   43:     return ImageHelpers.promisifiedFileReader(file[0])
   44        .then(fileReaderData => {
   45          fileData = { ...fileReaderData };
   46          let name = file[0].name || 'tmp_image_0';
   47          name = name.substring(0, 254);
   48:         return ImageHelpers.getS3AuthData(name);
   49        })
   50        .then(S3Data => {
   51:         return ImageHelpers.postToS3(S3Data, fileData, this.props.S3BucketURL, this.props.AWSAccessKeyId);
   52        })
   53        .then(url => {
   54          let fileType = this.props.locals.attribute_type;
   55:         return ImageHelpers.postURLToServer(url, null, this.state.csrfToken, fileType, fileType + '-upload');
   56        })
   57        .then(response => {
   ..
   74      this.setState({ isWorking: true });
   75  
   76:     return ImageHelpers.postRemoteURL(url, fileType, this.state.csrfToken)
   77        .then(body => {
   78          fileData = { id: body.id, image_link: url };
   79:         return ImageHelpers.pollJob(body['job_id']);
   80        })
   81        .then(status => {

13 matches across 3 files


Searching 27954 files for "ImageUploader" (whole word)

/Users/Zenko/Sites/Hackster/hackster/app/assets/javascripts/bundle.js:
 103572  	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
 103573  
 103574: 	var ImageUploader = function (_Component) {
 103575: 	  (0, _inherits3.default)(ImageUploader, _Component);
 103576  
 103577: 	  function ImageUploader(props) {
 103578: 	    (0, _classCallCheck3.default)(this, ImageUploader);
 103579  
 103580: 	    var _this = (0, _possibleConstructorReturn3.default)(this, (0, _getPrototypeOf2.default)(ImageUploader).call(this, props));
 103581  
 103582  	    _this.handleSelectPictureClick = _this.handleSelectPictureClick.bind(_this);
 .....
 103594  	  }
 103595  
 103596: 	  (0, _createClass3.default)(ImageUploader, [{
 103597  	    key: 'handleSelectPictureClick',
 103598  	    value: function handleSelectPictureClick(e) {
 .....
 103791  	    }
 103792  	  }]);
 103793: 	  return ImageUploader;
 103794  	}(_react.Component);
 103795  
 103796: 	exports.default = ImageUploader;
 103797  
 103798  
 103799: 	ImageUploader.PropTypes = {
 103800  	  locals: _react.PropTypes.object.isRequired,
 103801  	  handleImageUpload: _react.PropTypes.func.isRequired,
 .....
 142265  /***/ function(module, exports, __webpack_require__) {
 142266  
 142267: 	/* WEBPACK VAR INJECTION */(function(global) {module.exports = global["ImageUploader"] = __webpack_require__(1208);
 142268  	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))
 142269  

/Users/Zenko/Sites/Hackster/hackster/app/assets/javascripts/components.js:
   11  require('expose?FlagButton!./flag_button/app');
   12  require('expose?FollowButton!./follow_button/app');
   13: require('expose?ImageUploader!./image_uploader/app');
   14  require('expose?ListsDropdown!./lists_dropdown/app');
   15  require('expose?MouserContest!./mouser_contest/app');

/Users/Zenko/Sites/Hackster/hackster/app/assets/javascripts/course_wizard/components/Form.js:
    1  import React, { Component, PropTypes } from 'react';
    2  import ReactDOM from 'react-dom';
    3: import ImageUploader from '../../image_uploader/app';
    4  
    5  export default class Form extends Component {
    .
  132  
  133      let Image = image
  134:              ? (<ImageUploader locals={image} {...imageUploadData} getImageData={this.handleImageData} imageUploading={this.handleImageUploading} />)
  135               : (null);
  136  

/Users/Zenko/Sites/Hackster/hackster/app/assets/javascripts/image_uploader/app.js:
    2  import ReactDOM from 'react-dom';
    3  import DropZone from './DropZone';
    4: import ImageUploader from  './ImageUploader';
    5  import ImageHelpers from '../utils/Images';
    6  
    .
   96      return (
   97        <DropZone multiple={false} onDrop={this.handleImageUpload}>
   98:         <ImageUploader handleImageUpload={this.handleImageUpload} handleRemoteUpload={this.handleRemoteUpload} imageData={this.state.imageData} isWorking={this.state.isWorking} { ...this.props } />
   99        </DropZone>
  100      );

/Users/Zenko/Sites/Hackster/hackster/app/assets/javascripts/image_uploader/ImageUploader.js:
    5  import ProgressBar from './ProgressBar';
    6  
    7: export default class ImageUploader extends Component {
    8    constructor(props) {
    9      super(props);
   ..
  149  }
  150  
  151: ImageUploader.PropTypes = {
  152    locals: PropTypes.object.isRequired,
  153    handleImageUpload: PropTypes.func.isRequired,

/Users/Zenko/Sites/Hackster/hackster/app/models/attachments/image.rb:
   13      tiny: { w: 20, h: 20, fit: :max },
   14    }
   15:   mount_uploader :file, ImageUploader
   16  end

/Users/Zenko/Sites/Hackster/hackster/app/models/scrapers/scraper_strategies/base.rb:
  222            if src = test_link(src)
  223              # ext = File.extname(URI.parse(src).path)[1..-1]
  224:             # img.remove and next unless ext.in? ImageUploader::EXTENSION_WHITE_LIST
  225              img['src'] = src
  226              caption = find_caption_for img, base

/Users/Zenko/Sites/Hackster/hackster/app/uploaders/image_uploader.rb:
    1  # encoding: utf-8
    2  
    3: class ImageUploader < BaseImageUploader
    4  
    5    # version :lightbox do

/Users/Zenko/Sites/Hackster/hackster/app/views/challenge_ideas/_form.html.slim:
    6    = f.input :name, label: 'Name of your idea or concept'
    7    - locals = { file_type: 'image', attribute_type: 'image', image_version: 'thumb', model: 'challenge_idea', model_type: 'ChallengeIdea', help_block: 'Add a nice, high resolution image to enhance your submission! Will be cropped to fit 4:3 format.', errors: @idea.errors, image_data: @idea.image ? { id: @idea.image_id, image_link: @idea.image.try(:imgix_url, :thumb) } : nil }
    8:   = react_component('ImageUploader', { locals: locals, S3BucketURL: "https://#{ENV['FOG_DIRECTORY']}.s3.amazonaws.com", AWSAccessKeyId: "#{ENV['AWS_ACCESS_KEY_ID']}" })
    9  
   10    / = f.input :description, as: :text, input_html: { class: "text-editor" }

/Users/Zenko/Sites/Hackster/hackster/app/views/shared/_image_form_bare.html.slim:
    1: / = react_component('ImageUploader', { locals: local_assigns, S3BucketURL: "https://#{ENV['FOG_DIRECTORY']}.s3.amazonaws.com", AWSAccessKeyId: "#{ENV['AWS_ACCESS_KEY_ID']}" })
    2  
    3  = content_for :js do

/Users/Zenko/Sites/Hackster/hackster/tmp/cache/assets/development/sprockets/0011d9f24078a5b3b3b75ee9fb67ae01:
    <binary>

/Users/Zenko/Sites/Hackster/hackster/tmp/cache/assets/development/sprockets/2a61f06ae5cf5f6f1d43645b9b219453:
    <binary>

/Users/Zenko/Sites/Hackster/hackster/tmp/cache/assets/development/sprockets/2f5173deea6c795b8fdde723bb4b63af:
    <binary>

/Users/Zenko/Sites/Hackster/hackster/tmp/cache/assets/development/sprockets/54cc1257b927751b13f0369969e17440:
    <binary>

/Users/Zenko/Sites/Hackster/hackster/tmp/cache/assets/development/sprockets/8d55d8baa9ba44e3a712be2608138977:
    <binary>

/Users/Zenko/Sites/Hackster/hackster/tmp/cache/assets/development/sprockets/8ef1b8333d61fab15e7868d6498feb48:
    <binary>

/Users/Zenko/Sites/Hackster/hackster/tmp/cache/assets/development/sprockets/cffd775d018f68ce5dba1ee0d951a994:
    <binary>

/Users/Zenko/Sites/Hackster/hackster/tmp/cache/assets/development/sprockets/e61ea61153dc11aec02a4d9529a6dde4:
    <binary>

76 matches across 18 files

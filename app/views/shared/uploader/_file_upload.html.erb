$(function(){
  $('.file_upload.<%= file_type %>').fileupload({
    limitMultiFileUploads: 1,
    sequentialUploads: true,
    limitConcurrentUploads: 1,
    dropZone: '.file-drop.<%= file_type %>',
    //acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
    //maxFileSize: 200000,  // 2MB

    add: function(e, data) {
      file = data.files[0];
      data = <%= file_type %>Functions.fileuploadAdd(data, file);
      validations = {
        maxFileSize: $('.file_upload.<%= file_type %> input[name="file"]').data('max-file-size')
      }
      dataFileTypes = $('.file_upload.<%= file_type %> input[name="file"]').data('file-type');
      if (dataFileTypes != 'undefined') {
        validations['fileType'] = dataFileTypes;
      }
      errors = checkFileForErrors(file, validations);
      if (errors.length > 0) {
        target = <%= file_type %>Functions.fileuploadTargetForFail(data);
        target.replaceWith('<div class="help-block has-error">Error: ' + errors.join(', ')+'</span>');
      } else {
        var jqXHR = data.submit();
      }
    },

    fail: function(e, data){
      target = <%= file_type %>Functions.fileuploadTargetForFail(data);
      target.replaceWith('Error, please retry. If the problem persists please email <a href="mailto:team@hackster.io?subject=My file won\'t upload&body=Debug info:%0D%0Atype: ' + data.files[0].type + '%0D%0Asize: ' + data.files[0].size + '%0D%0Abitrate: ' + data.bitrate + '">team@hackster.io</a>')
    },

    progress: function(e, data) {
      progress = parseInt(data.loaded / data.total * 100, 10);
      target = <%= file_type %>Functions.fileuploadTargetForProgress(data);
      target.css('width', progress + '%');
    },

    done: function(e, data){
      <%= file_type %>Functions.fileuploadDone(data);
    }
  });
});

function checkFileForErrors(file, validations) {
  errors = [];
  maxFileSize = validations['maxFileSize'];
  if (file.size > maxFileSize) {
    errors.push('Maximum file size is ' + maxFileSize / 1000000 + 'MB');
  }
  if (validations['fileType'] != undefined) {
    fileType = validations['fileType'];
    regexp = new RegExp('(\.|\/)(' + fileType.split(',').join('|') + ')$');
    if (!regexp.test(file.name)) {
      msg = fileType.split(',').join(', ');
      errors.push('Allowed file types are ' + msg);
    }
  }
  return errors;
}
= content_tag :div, class: "wysihtml5-toolbar btn-toolbar wysihtml5-toolbar-new", style: "display: none;" do
  .btn-group
    %a.btn.btn-default.wysihtml5-command{ data: { 'wysihtml5-command' => 'bold', container: 'body' }, rel: 'tooltip', title: 'bold' }
      %i.fa.fa-bold
    %a.btn.btn-default.wysihtml5-command{ data: { 'wysihtml5-command' => 'italic', container: 'body' }, rel: 'tooltip', title: 'italic' }
      %i.fa.fa-italic
    %a.btn.btn-default.wysihtml5-command{ data: { 'wysihtml5-command' => 'underline', container: 'body' }, rel: 'tooltip', title: 'underline' }
      %i.fa.fa-underline

  - unless @wysihtml5_toolbar_style == 'simple'
    .btn-group
      %a.btn.btn-default.dropdown-toggle.wysihtml5-command{ data: { toggle: 'dropdown' }, href: '#' }
        %i.fa.fa-font
        %span.current-font
        %b.caret
      %ul.dropdown-menu.pull-left
        %li
          %a{ data: { 'wysihtml5-command' => 'formatBlock', 'wysihtml5-command-value' => 'div' } } Normal text
        %li
          %a{ data: { 'wysihtml5-command' => 'formatBlock', 'wysihtml5-command-value' => 'h5' } } Heading 1
        %li
          %a{ data: { 'wysihtml5-command' => 'formatBlock', 'wysihtml5-command-value' => 'h6' } } Heading 2

  - unless @wysihtml5_toolbar_style == 'simple'
    .btn-group
      %a.btn.btn-default.wysihtml5-command{ data: { 'wysihtml5-command' => 'insertUnorderedList', container: 'body' }, rel: 'tooltip', title: 'insert bullet points' }
        %i.fa.fa-list-ul
      %a.btn.btn-default.wysihtml5-command{ data: { 'wysihtml5-command' => 'insertOrderedList', container: 'body' }, rel: 'tooltip', title: 'insert list' }
        %i.fa.fa-list-ol

  - unless @wysihtml5_toolbar_style == 'simple'
    - if defined? activate_float and activate_float
      .btn-group
        %a.btn.btn-default.wysihtml5-command{ data: { 'wysihtml5-command' => 'justifyLeft', container: 'body' }, rel: 'tooltip', title: 'align left' }
          %i.fa.fa-align-left
        %a.btn.btn-default.wysihtml5-command{ data: { 'wysihtml5-command' => 'justifyRight', container: 'body' }, rel: 'tooltip', title: 'align right' }
          %i.fa.fa-align-right

  .btn-group
    %a.btn.btn-default.wysihtml5-command{ data: { 'wysihtml5-command' => 'createLink', container: 'body' }, rel: 'tooltip', title: 'insert link' }
      %i.fa.fa-link

    - unless @wysihtml5_toolbar_style == 'simple'
      %a.btn.btn-default.wysihtml5-command{ data: { 'wysihtml5-command' => 'insertImage', container: 'body' }, rel: 'tooltip', title: 'insert image' }
        %i.fa.fa-picture-o

      %a.btn.btn-default{ data: { 'wysihtml5-action' => 'change_view', container: 'body' }, rel: 'tooltip', title: 'toggle HTML view' }
        %i.fa.fa-code

  .dialog{ data: { 'wysihtml5-dialog' => 'createLink' }, style: 'display: none;' }
    %label
      Link:
      %input.text{ data: { 'wysihtml5-dialog-field' => 'href' }, :value => 'http://' }
    %a.btn{ data: { 'wysihtml5-dialog-action' => 'save' } } OK
    %a.btn{ data: { 'wysihtml5-dialog-action' => 'cancel' } } Cancel

  - unless @wysihtml5_toolbar_style == 'simple'
    .dialog{ data: { 'wysihtml5-dialog' => 'insertImage' }, style: 'display: none;' }
      %label
        Link:
        %input.text{ data: { 'wysihtml5-dialog-field' => 'src' }, :value => 'http://' }
      %a.btn{ data: { 'wysihtml5-dialog-action' => 'save' } } OK
      %a.btn{ data: { 'wysihtml5-dialog-action' => 'cancel' } } Cancel

= content_for :js do
  :javascript
    var count = $('.wysihtml5-toolbar:not(.wysihtml5-toolbar-new)').length + 1;

    $('.wysihtml5-toolbar-new')
      .removeClass('wysihtml5-toolbar-new')
      .attr('id', 'wysihtml5-toolbar-' + count);

    $('.wysihtml5-textarea-new')
      .removeClass('wysihtml5-textarea-new')
      .attr('id', 'wysihtml5-textarea-' + count);

    var editor = new wysihtml5.Editor("wysihtml5-textarea-" + count, { // id of textarea element
      toolbar:      "wysihtml5-toolbar-" + count, // id of toolbar element
      stylesheets:  "/assets/wysihtml5.css", // optional, css to style the editor's content
      parserRules:  wysihtml5CustomParserRules, // defined in parser rules set
      allowObjectResizing:  true // Whether the composer should allow the user to manually resize images, tables etc.
    });
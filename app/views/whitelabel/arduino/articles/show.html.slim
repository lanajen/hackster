c= content_for :head do
  = render 'meta_tags'

= inserts_stats_for @project

/ update counters via JS so we can cache the views longer
- content_for :js do

  javascript:
    $(function(){
      var s = "<span class='stat-figure'>#{number_with_delimiter @project.impressions_count}</span> #{pluralize_without_count @project.impressions_count, 'view'}";
      $('.impression-stats').html(s);
      s = "<span class='stat-figure'>#{number_with_delimiter @project.respects_count}</span> #{pluralize_without_count @project.respects_count, 'respect'}";
      $('.respect-stats').html(s);
    });

= content_for :no_container do

  = render 'projects/switcher'

  - cache_unless user_signed_in?, [I18n.locale, @project, site_user_name], tag: ["project-#{@project.id}"], expires_in: 3.hours do

    / = render 'projects/project_embed_popup'

    #content.project-page class="project-#{@project.id}"
      .wrapper780.protip-show
        = render 'projects/project_type'
        section.section-no-container.protip-section-heading.clearfix
          - if @can_edit
            - if @project.publyc? and @project.has_platform? and !@project.has_part_related_to_origin_platform?
                .alert.alert-warning
                  strong> Heads up!
                  ' This article is currently visible only to you on the Arduino Project Hub site because no Arduino hardware was found in the products list. Only projects made with Arduino hardware will appear publicly on the Arduino Project Hub site.
            .pull-right-desktop
              - if @project.publyc?
                - if current_user.is?(:admin) and !current_user.is_team_member? @project
                  = render partial: 'respects/article_button', locals: { respectable: @project }
                span style="position:relative;"= react_component('ListsDropdown', { path: api_private_lists_url(host: api_host), projectId: @project.id, placeholder: 'New list name' }, { class: 'react-btn', style: 'display:inline-block;' })
                a.btn.btn-link.btn-sm data-content=render('share_button').gsub('"', "'") data-html='true' data-placement='bottom' data-toggle='popover' data-trigger='click'
                  i.fa.fa-share-square-o
                  span Share
              span style='margin-left:5px' = render 'base_articles/manage_actions', { btn_size: 'btn-sm' }

          - elsif @project.pryvate?
            p.pull-right-desktop
              i.fa.fa-lock>
              | This article is private.
          - else
            .pull-right-desktop
              = render partial: 'respects/article_button', locals: { respectable: @project }
              - if user_signed_in?
                span style="position:relative;"= react_component('ListsDropdown', { path: api_private_lists_url(host: api_host), projectId: @project.id, placeholder: 'New list name' }, { class: 'react-btn', style: 'display:inline-block;' })
              a.btn.btn-link.btn-sm data-content=render('share_button').gsub('"', "'") data-html='true' data-placement='bottom' data-toggle='popover' data-trigger='click'
                i.fa.fa-share-square-o
                span Share

          .media.protip-author.pull-left-desktop
            .media-left
              - if @project.guest_name.present?
                span
                  .media-object style="height:40px;width:1px"
              - else
                = link_to image_tag(@author.avatar(:large), alt: @author.name, class: 'img-circle media-object'), @author
            .media-body
              .media-heading
                - if @project.guest_name.present?
                  = @project.guest_name
                - else
                  = link_to @author.name, @author
              ul.list-inline.project-stats
                li.impression-stats
                  span.stat-figure> = number_with_delimiter @project.impressions_count
                  = pluralize_without_count @project.impressions_count, 'view'
                li.respect-stats
                  span.stat-figure> = number_with_delimiter @project.respects_count
                  = pluralize_without_count @project.respects_count, 'respect'

        - cache_unless @can_edit, [I18n.locale, @project, 'left-column', is_whitelabel?], tag: ["project-#{@project.id}-left-column"], expires_in: 24.hours do

          section.section-container.section-no-title
            section.section-content.clearfix
              .protip-section-title
                h1
                  => @project.name
                p= @project.one_liner

                - if @parts.exists?
                  ul.protip-parts
                    - @parts.each do |part|
                      li
                        - part = part.decorate
                        - if part.image
                          = image_tag part.image(:part_thumb_big)
                        - if part.has_own_page? and !is_whitelabel?
                          span= link_to part.full_name, part
                        - elsif part.store_link.present?
                          span= link_to part.full_name, part.store_link, target: '_blank', rel: 'nofollow'
                        - elsif part.product_page_link.present?
                          span= link_to part.full_name, part.product_page_link, target: '_blank', rel: 'nofollow'
                        - else
                          span= part.full_name

              .protip-section-img
                = image_tag @project.cover_image(:medium)

          - cache [I18n.locale, "project-#{@project.id}-widgets"], tag: ["project-#{@project.id}-widgets"], skip_digest: true do
            - if @description.present?
              section.section-container.section-no-title
                .section-content.hljs-active
                  .medium-editor= @description

          - cache [I18n.locale, "project-#{@project.id}-attachments"], tag: ["project-#{@project.id}-attachments"], skip_digest: true do
            - if @widgets.any?
              section#team.section-container
                h2.section-title
                  span.title
                    ' Attachments
                .section-content
                  = render partial: "api/embeds/code_widgets", locals: { widgets: @code_widgets }
                  - @other_widgets.each do |widget|
                    = render partial: "api/embeds/#{widget.identifier}", locals: { widget: widget }

          section#team.section-container
            h2.section-title
              span.title
                ' Written by
            .section-content
              - if @project.guest_name.present?
                .member-thumb
                  p.user-name= @project.guest_name

                  p
                    ' Are you
                    span.user-name= @project.guest_name
                    ' ?
                    span.text-muted Claim this project and add it to your profile.
                  - if user_signed_in?
                    = link_to 'This is mine', claim_project_path(@project), data: { method: :post, confirm: "Are you really the author of this project? Note that we'll have to approve it!" }, class: 'btn btn-primary btn-sm'
                  - else
                    = link_to 'This is mine', new_user_registration_path(reason: 'claim', m: 'project', id: @project.id, source: 'claim'), class: 'btn btn-primary btn-sm'
                - if poster = @project.team.try(:active_members).try(:includes, :user).try(:first).try(:user).try(:decorate)
                  .member-thumb.posted-by
                    ' Posted by
                    => link_to image_tag(poster.avatar(:large), class: 'img-circle'), poster
                    = link_to poster.name, poster
              - else
                - @project.team_members.each do |member|
                  = render partial: 'users/user_thumb_for_product', locals: { user: member.user.decorate, contribution: member.contribution }

              - if @project.credit_lines.any?
                .member-thumb
                  ' Thanks to
                  = @project.credit_lines.map{|c| render('credit_line', credit_line: c) }.to_sentence.html_safe
                  | .

              - if @project.product_tags_cached.any?
                ul.list-inline.tags
                  - @project.product_tags_cached.map{|t| t.downcase }.each do |tag|
                    li= link_to tag, tag_path(tag), class: 'tag tag-invert'

              p.small.text-muted
                - if @project.made_public_at
                  span
                    i.fa.fa-clock-o
                    span= l @project.made_public_at, format: :long_date
                  - if @project.license
                    span style='padding:0 10px' -

                - if @project.license
                  span
                    ' Licensed under
                    a target='_blank' href=@project.license.url = @project.license.abbr
                    | .

          section#comments.section-container.section-collapsible
            h2.section-title
              a.title.title-toggle href=''
                ' Comments
                i.fa.fa-chevron-down
                i.fa.fa-chevron-up
            .section-content
              = render partial: 'widgets/comments_react', locals: { commentable: @project, placeholder: 'Share your thoughts! What do you like about this article? How could it be improved? Be respectful and constructive â€“ most Hackster members create and share personal projects in their free time.', cache_version: 'arduino' }

    - if @project.publyc?
      - cache [I18n.locale, "project-#{@project.id}-other-bottom", @other_projects, site_user_name], tag: "project-#{@project.id}-other" do
        - if @other_projects.count > 0
          section.other-projects
            .container
              section.section-thumbs
                h4 style='border:0' Related articles and projects
              .row
                - @other_projects.each do |project|
                  = render partial: 'projects/project_thumb', locals: { project: project.decorate, ref: 'similar' }
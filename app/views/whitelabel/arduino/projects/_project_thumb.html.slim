- ref = defined?(ref) ? ref : nil
- ref_id = defined?(ref_id) ? ref_id : nil
- offset = defined?(offset) ? offset : nil
- show_year = defined?(show_year) ? show_year : nil
- show_year = show_year ? 'year' : 'placeholder' unless show_year.nil?
- col = (defined?(col) and col) ? col : 4
- host = defined?(force_host) ? force_host : false
- locale = defined?(locale) ? locale : params[:locale]
- if host
  - project_link = project_url(project, host: host, locale: locale, path_prefix: nil)
- else
  - project_link = url_for(project)
- certifier = defined?(certifier) ? certifier : nil

.col-sm-6.mobile-scroll-row-item.project-thumb-container data-ref=ref data-ref-id=ref_id data-offset=offset data-show-year=show_year class="col-md-#{col} #{'has-data' if ref and ref_id}"
  - cache [I18n.locale, "project-#{project.id}-thumb", host, 'arduino'], tag: ["project-#{project.id}-thumb", "team-#{project.team_id}"], expires_in: 6.hours do
    - project = project.decorate
    div class="project-#{project.id}"
      .thumb.project-thumb
        .thumb-image.has-link-overlay
          img.project-thumb-img data-async-src=project.cover_image(:cover_thumb) src=asset_url('whitelabel/arduino/placeholder_proj_cover.svg')
          noscript
            img.project-thumb-img.loaded src=project.cover_image(:cover_thumb)
          = link_to '', project_link, class: 'link-overlay project-link-with-ref', target: (host.present? ? '_blank' : nil)
          .thumb-image-inner-top
            .award-container
            p.description.show-on-hover
              = project.one_liner
        .thumb-inner
          h4.ellipsis
            - if project.pryvate?
              i.fa.fa-lock.small
            - elsif project.unlisted?
              i.fa.fa-eye-slash.small
            span= link_to project.name, project_link, class: 'project-link-with-ref'
          p
            => project.content_type_to_human
            - if project.external?
              - if project.guest_name.present?
                ' by
                span.user-name>= project.guest_name
              - elsif u = project.users.first
                ' by
                span.user-name=> link_to u.name, u
              ' on
              strong= project.website_host
            - else
              = render partial: 'projects/by_team', locals: { project: project }

          ul.list-inline.project-stats
            li
              span.stat-figure> = number_with_delimiter project.impressions_count
              = pluralize_without_count project.impressions_count, 'view'
            li
              span.stat-figure> = number_with_delimiter project.comments_count
              = pluralize_without_count project.comments_count, 'comment'
            li
              span.stat-figure> = number_with_delimiter project.respects_count
              = pluralize_without_count project.respects_count, 'respect'
          .thumb-super
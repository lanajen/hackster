= content_for :head do
  meta  name='robots' content='noindex'
  = auto_discovery_link_tag :rss, projects_path(format: :rss, sort: 'recent'), title: 'Last projects - Hackster.io'
  = auto_discovery_link_tag :atom, projects_path(format: :atom, sort: 'recent'), title: 'Last projects - Hackster.io'

.content.projects
  .row
    .col-xs-12
      .header.clearfix
        h1.pull-left
          ' Explore #{@by} projects
          small page #{safe_page_params || 1}

        .btn-group.btn-group-default.pull-right style='margin-left:10px'
          .btn-group
            button.btn.btn-default.btn-sm.dropdown-toggle*{ data: { toggle: 'dropdown' } }
              - case params[:show_all]
              - when nil
                ' Featured
              - when '1'
                ' All projects
              span.caret
            ul.dropdown-menu.pull-right
              li*{ class: "#{'active' if params[:show_all] == nil}" } = link_to 'Featured', projects_path(sort: params[:sort], by: params[:by], difficulty: params[:difficulty], type: params[:type], show_all: nil)
              li*{ class: "#{'active' if params[:show_all] == '1'}" } = link_to 'All projects', projects_path(sort: params[:sort], by: params[:by], difficulty: params[:difficulty], type: params[:type], show_all: '1')

          .btn-group
            button.btn.btn-default.btn-sm.dropdown-toggle*{ data: { toggle: 'dropdown' } }
              - case params[:sort]
              - when 'updated'
                ' Last updated
              - when 'popular'
                ' Most popular
              - when 'recent'
                ' Most recent
              - when 'respected'
                ' Most respected
              - when 'trending'
                ' Trending
              span.caret
            ul.dropdown-menu.pull-right
              li*{ class: "#{'active' if params[:sort] == 'updated'}" } = link_to 'Last updated', projects_path(sort: 'updated', by: params[:by], difficulty: params[:difficulty], type: params[:type], show_all: params[:show_all])
              li*{ class: "#{'active' if params[:sort] == 'popular'}" } = link_to 'Most popular', projects_path(sort: 'popular', by: params[:by], difficulty: params[:difficulty], type: params[:type], show_all: params[:show_all])
              li*{ class: "#{'active' if params[:sort] == 'recent'}" } = link_to 'Most recent', projects_path(sort: 'recent', by: params[:by], difficulty: params[:difficulty], type: params[:type], show_all: params[:show_all])
              li*{ class: "#{'active' if params[:sort] == 'respected'}" } = link_to 'Most respected', projects_path(sort: 'respected', by: params[:by], difficulty: params[:difficulty], type: params[:type], show_all: params[:show_all])
              li*{ class: "#{'active' if params[:sort] == 'trending'}" } = link_to 'Trending', projects_path(sort: 'trending', by: params[:by], difficulty: params[:difficulty], type: params[:type], show_all: params[:show_all])

          .btn-group
            button.btn.btn-default.btn-sm.dropdown-toggle*{ data: { toggle: 'dropdown' } }
              - case params[:by]
              - when nil
                ' All time
              - when '7days'
                ' Last 7 days
              - when '30days'
                ' Last 30 days
              - when '1year'
                ' Last 12 months
              span.caret
            ul.dropdown-menu.pull-right
              li*{ class: "#{'active' if params[:by] == nil}" } = link_to 'All time', projects_path(sort: params[:sort], difficulty: params[:difficulty], type: params[:type], show_all: params[:show_all])
              li*{ class: "#{'active' if params[:by] == '7days'}" } = link_to 'Last 7 days', projects_path(by: '7days', sort: params[:sort], difficulty: params[:difficulty], type: params[:type], show_all: params[:show_all])
              li*{ class: "#{'active' if params[:by] == '30days'}" } = link_to 'Last 30 days', projects_path(by: '30days', sort: params[:sort], difficulty: params[:difficulty], type: params[:type], show_all: params[:show_all])
              li*{ class: "#{'active' if params[:by] == '1year'}" } = link_to 'Last 12 months', projects_path(by: '1year', sort: params[:sort], difficulty: params[:difficulty], type: params[:type], show_all: params[:show_all])

          .btn-group
            button.btn.btn-default.btn-sm.dropdown-toggle*{ data: { toggle: 'dropdown' } }
              - case params[:difficulty]
              - when nil
                ' Any difficulty
              - when 'beginner'
                ' Easy
              - when 'intermediate'
                ' Intermediate
              - when 'advanced'
                ' Advanced
              - when 'hardcore'
                ' Super hard
              span.caret
            ul.dropdown-menu.pull-right
              li*{ class: "#{'active' if params[:difficulty] == nil}" } = link_to 'Any difficulty', projects_path(by: params[:by], sort: params[:sort], type: params[:type], show_all: params[:show_all])
              li*{ class: "#{'active' if params[:difficulty] == 'beginner'}" } = link_to 'Easy', projects_path(difficulty: 'beginner', by: params[:by], sort: params[:sort], type: params[:type], show_all: params[:show_all])
              li*{ class: "#{'active' if params[:difficulty] == 'intermediate'}" } = link_to 'Intermediate', projects_path(difficulty: 'intermediate', by: params[:by], sort: params[:sort], type: params[:type], show_all: params[:show_all])
              li*{ class: "#{'active' if params[:difficulty] == 'advanced'}" } = link_to 'Advanced', projects_path(difficulty: 'advanced', by: params[:by], sort: params[:sort], type: params[:type], show_all: params[:show_all])
              li*{ class: "#{'active' if params[:difficulty] == 'hardcore'}" } = link_to 'Super hard', projects_path(difficulty: 'hardcore', by: params[:by], sort: params[:sort], type: params[:type], show_all: params[:show_all])

          .btn-group
            button.btn.btn-default.btn-sm.dropdown-toggle*{ data: { toggle: 'dropdown' } }
              - case params[:type]
              - when nil
                ' Any type
              - when 'getting_started'
                ' Getting started guide
              - when 'showcase'
                ' Showcase
              - when 'protip'
                ' Protip
              - when 'teardown'
                ' Teardown
              - when 'tutorial'
                ' Tutorial
              - when 'wip'
                ' Work in progress
              span.caret
            ul.dropdown-menu.pull-right
              li*{ class: "#{'active' if params[:type] == nil}" } = link_to 'Any type', projects_path(by: params[:by], sort: params[:sort], difficulty: params[:difficulty])
              li*{ class: "#{'active' if params[:type] == 'getting_started'}" } = link_to 'Getting started guide', projects_path(type: 'getting_started', by: params[:by], sort: params[:sort], difficulty: params[:difficulty], show_all: params[:show_all])
              li*{ class: "#{'active' if params[:type] == 'showcase'}" } = link_to 'Showcase', projects_path(type: 'showcase', by: params[:by], sort: params[:sort], difficulty: params[:difficulty], show_all: params[:show_all])
              li*{ class: "#{'active' if params[:type] == 'protip'}" } = link_to 'Protip', projects_path(type: 'protip', by: params[:by], sort: params[:sort], difficulty: params[:difficulty], show_all: params[:show_all])
              li*{ class: "#{'active' if params[:type] == 'teardown'}" } = link_to 'Teardown', projects_path(type: 'teardown', by: params[:by], sort: params[:sort], difficulty: params[:difficulty], show_all: params[:show_all])
              li*{ class: "#{'active' if params[:type] == 'tutorial'}" } = link_to 'Tutorial', projects_path(type: 'tutorial', by: params[:by], sort: params[:sort], difficulty: params[:difficulty], show_all: params[:show_all])
              li*{ class: "#{'active' if params[:type] == 'wip'}" } = link_to 'Work in progress', projects_path(type: 'wip', by: params[:by], sort: params[:sort], difficulty: params[:difficulty], show_all: params[:show_all])

      hr

    - if @projects.exists?
      .col-xs-12
        .row.thumb-list
          - @projects.each_with_index do |project, i|
            = render partial: 'projects/project_thumb', locals: { project: project.decorate, ref: 'explore', ref_id: [params[:sort], params[:by], params[:difficulty], params[:type]].join('_'), offset: (i + ((safe_page_params || 1) - 1) * BaseArticle.per_page) }
        .row
          .col-xs-12.text-center= will_paginate @projects
    - else
      .col-xs-12 Looks like there's no match, please extend your filters!
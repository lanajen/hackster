- active_member = (user_signed_in? and current_user.is_team_member? @project, false)

- if @project.collection_id.present?
  #project-group
    This project is part of
    - if @project.assignment.present?
      - if @project.assignment.promotion.avatar
        = image_tag @project.assignment.promotion.avatar.file_url(:mini), class: 'img-circle'
      = link_to @project.assignment.to_label, assignment_path(@project.assignment)
    - elsif @project.event.present?
      - if @project.event.avatar
        = image_tag @project.event.avatar.file_url(:mini), class: 'img-circle'
      = link_to @project.event.name, event_path(@project.event)
      - @project.awards.where(gradable_id: @project.collection_id, gradable_type: 'Group').each do |award|
        %span.project-award
          %i.fa.fa-trophy.istooltip{ title: award.grade, data: { container: 'body' } }
      -# if can? :request_access, @project.team
        - if user_signed_in? and member = current_user.is_team_member?(@project)
          - if member.request_pending?
            %span.label.label-default Request to join team pending
        - else
          = link_to 'Join team', group_members_path(@project.team), class: 'btn btn-xs btn-warning', data: { method: :post }, id: 'join-button'

- who = %w(you)
- who += ['team members'] if @project.users.size > 1
- who += ["members of #{@project.assignment.promotion.name}"] if @project.collection_id.present? and @project.assignment.present?
- if @project.private and @can_edit
  .alert.alert-warning
    %i.fa.fa-lock
    This project is private so only #{who.to_sentence} can see it.
    - if @project.can_be_public? or current_user.try(:is?, :admin)
      = link_to 'Publish publicly', project_path(@project, project: { private: 0 }), method: :patch, class: 'btn btn-warning btn-sm'
    - else
      = content_tag(:i, '', class: 'fa fa-info-circle istooltip', title: 'You need to add a description and a cover image before you can make it public.')
-# elsif active_member
  .alert.alert-info.alert-author-share
    %strong Time to shine!
    Share your project or
    = link_to 'submit it to HackADay', "mailto:tips@hackaday.com?subject=#{@project.name}&body=#{@project.one_liner}%0D%0AProject page: #{project_url(@project)}", class: 'alert-link'
    = link_to "&times;".html_safe, '#', data: { close: '.alert-author-share' }, class: 'btn-close btn-close-notif'
    = render 'projects/share_by_author'

- if @can_edit
  %div{ style: 'padding: 0 20px;' }
    = render partial: 'shared/medium_editor_status_bar', locals: { last_edit: @project.updated_at }

#top-project-section
  #project-top-image{style: "background-image: url('#{@project.cover_image}');"}
  #top-project-section-deets
    #project-header
      .wrapper700
        #project-header-in
          - if @can_edit
            #upload-cover-image{ 'data-edit-only' => 'true' }
              %a{ href: '', rel: 'tooltip', title: 'Change cover image' }
                %i.fa.fa-image
              %form#upload-cover-image-form{action: "https://#{ENV['FOG_DIRECTORY']}.s3.amazonaws.com", enctype: "multipart/form-data", method: "post", style: "display:none;"}
                %input{name: "key", type: "hidden"}
                %input{name: "AWSAccessKeyId", type: "hidden", value: "#{ENV['AWS_ACCESS_KEY_ID']}"}
                %input{name: "acl", type: "hidden", value: "public-read"}
                %input{name: "policy", type: "hidden"}
                %input{name: "signature", type: "hidden"}
                %input{name: "success_action_status", type: "hidden", value: "201"}
                %input{name: "file", type: "file"}
          %h1
            - if @project.logo(:thumb, false)
              = image_tag @project.logo(:thumb), class: 'project-logo'
            - if @project.private?
              %i.fa.fa-lock.private-project-icon.istooltip{ title: 'Private project', data: { container: 'body' } }
            - if @can_edit
              %span.editable-attribute{ 'data-model' => "project", 'data-attribute' => "name", "data-default-text" => "Project name", 'data-view-tpl' => "<a href='#' class='hidden-link'>*value*</a>", 'data-value' => @project.name }
            - else
              = link_to @project.name, @project, class: 'hidden-link'

          #project-information
            - cache [@project, 'teaser', @can_edit, can?(:debug, @project)], tag: (["project-#{@project.id}-teaser"] + @project.users.map{|u| "user-#{u.id}-thumb"}) do
              - if @can_edit
                .one-liner.editable-attribute{ 'data-model' => "project", 'data-attribute' => "one_liner", "data-default-text" => "Describe this project in a sentence (140 characters max)", 'data-value' => @project.one_liner, 'data-view-tpl' => '*value*' }
              - elsif @project.one_liner.present?
                .one-liner= @project.one_liner

              - if @can_edit
                .tags.meta
                  %span.editable-attribute{ 'data-model' => "project", 'data-attribute' => "product_tags_string", "data-default-text" => "Add tags, separated by commas. Eg: home automation, drone, display...", 'data-view-tpl' => "*var f=function(tagString){ var out = '', tags = []; tags = tagString.split(','); $.each(tags, function(i, tag){ tag = tag.trim(); tpl = \"<span><a class='tag-link' href='/tags/\" + encodeURIComponent(tag) + \"'>\" + tag + \"</a></span>\"; out += tpl; }); return out; }; f(value);*", 'data-value' => @project.product_tags_string }
              - elsif @project.product_tags.any?
                .tags.meta
                  - @project.product_tags.pluck(:name).each do |tag|
                    %span= link_to tag, "/tags/#{CGI::escape(tag)}", class: 'tag-link'

              - if @can_edit
                .tags.meta
                  Buy it from
                  %span.editable-attribute{ 'data-model' => "project", 'data-attribute' => "buy_link", "data-default-text" => "Can this be purchased somewhere? If so enter the link here", 'data-view-tpl' => "<a href='*value*' target='_blank' rel='nofollow'>*extractHost(value)*</a>", 'data-value' => @project.buy_link }
              - elsif @project.buy_link.present?
                .tags.meta
                  Buy it from
                  = link_to "#{URI.parse(@project.buy_link).host.gsub(/^www\./, '')}", @project.buy_link, target: '_blank', rel: 'nofollow'

    %span.fa.fa-chevron-down.trigger-main-project-scroll.js-scroll-main-project
    #project-team
      .team-widget.pull-left
        - if @project.guest_name.present?
          .user.guest-name
            %span.user-name= @project.guest_name
        - else
          - users = @project.team.active_members.includes(:user)
          - u = users.first.user
          .user
            = link_to image_tag(u.decorate.avatar(:mini), class: ' img-circle' ), u, class: ''
            %span.user-name
              = link_to u.name, u, class: 'hidden-link'
              - if users.size > 1
                = link_to "and #{pluralize (users.size - 1), 'other'}", 'javascript:smoothScrollTo("#team-widget", -20);', class: 'hidden-link'

      - if @can_edit
        .tags.meta.pull-left
          with
          %span.editable-attribute{ 'data-model' => "project", 'data-attribute' => "tech_tags_string", "data-default-text" => "Add technologies you used in this project, separated by commas. Eg: Arduino, ATmega, Attiny...", 'data-view-tpl' => "*var f=function(tagString){ var out = [], tags = []; tags = tagString.split(','); $.each(tags, function(i, tag){ tag = tag.trim(); tpl = \"<span><a class='tag-link' href='/tags/\" + encodeURIComponent(tag) + \"'>\" + tag + \"</a></span>\"; out.push(tpl); }); return toSentenceArray(out); }; f(value);*", 'data-value' => @project.tech_tags_string }
      - elsif @project.tech_tags.any?
        .tags.meta.pull-left
          with
          - tags = @project.tech_tags.pluck(:name).map do |tag|
            - if tech = Tech.includes(:tech_tags).references(:tags).where("LOWER(tags.name) = ?", tag.downcase).first
              - tag_link = tech_short_path(tech)
            - else
              - tag_link = "/tags/#{CGI::escape(tag)}"
            - link_to tag, tag_link, class: 'tag-link'
          = tags.to_sentence.html_safe

        .clearfix
    %a.fa.fa-info-circle.meta-data{ data: { container: 'body', toggle: 'popover', placement: 'left', content: render('projects/meta_data'), trigger: 'hover', html: 'true'}, rel: 'popover'}
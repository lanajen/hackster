/
  can we reduce the size of component inputs?
  add assembly instructions (steps?)


= simple_nested_form_for @project, url: api_v1_project_path(@project), html: { data: { remote: true }, class: 'form-horizontal remote sortable' }, wrapper: :bootstrap3_horizontal do |f|

  input type='hidden' name='panel' value='hardware'
  input type='hidden' name='save' value='1'

  .pe-header
    h2 The hardware
    .subheading
      | What are the components that you're using in this project? How are they assembled?
      br
      | In this section: components, tools, schematics and CAD

  .row
    .col-md-8.col-md-offset-2
      = f.error_notification

      .box data-anchor='hardware_parts'
        .box-title.small-title
          h4 Components and supplies
        .box-content
          = render partial: 'projects/forms/hardware_parts', locals: { project: @project, f: f }

      .box data-anchor='tools'
        .box-title.small-title
          h4 Necessary tools and machines
        .box-content
          = render partial: 'projects/forms/tool_parts', locals: { project: @project, f: f }

      .box data-anchor='schematics'
        .box-title.small-title
          h4 Schematics and circuit diagrams
        .box-content
          p.small.text-muted
            ' We recommend using
            ==> link_to 'Fritzing.org', 'http://fritzing.org', target: '_blank'
            | for circuit diagrams. It's free and accessible to all skill levels.
          .btn-group
            a.btn.btn-sm.btn-default.modal-open.modal-reset data-target='#upload-popup' data-field-type='SchematicFileWidget'
              i.fa.fa-cloud-upload>
              | Upload image or file
            a.btn.btn-sm.btn-default.modal-open.modal-reset data-target='#schematic-repo-popup'
              i.fa.fa-link>
              | Link existing repository

          / # = render partial: 'projects/forms/table', locals: { f: f, id: 'schematic-repo', widget_types: 'SchematicWidget', style: 'repository' }

          - if @project.widgets.where(type: %w(SchematicWidget SchematicFileWidget)).any?
            table.table.table-decorated.table-hover.table-sortable
              tbody
                - @project.widgets.where(type: %w(SchematicWidget SchematicFileWidget)).order(:position, :id).each do |file|
                  = f.simple_fields_for :widgets, file do |f_widget|
                    tr.fields
                      td
                        i.fa.fa-bars.handle
                        = f_widget.input :id, as: :hidden, input_html: { 'data-field-type' => 'id' }
                        = f_widget.input :position, as: :hidden, input_html: { 'data-field-type' => 'position', class: 'position' }
                        = f_widget.input :name, as: :hidden, input_html: { 'data-field-type' => 'name' }
                        = f_widget.input :comment, as: :hidden, input_html: { 'data-field-type' => 'comment' }
                        = f_widget.input :type, as: :hidden, input_html: { 'data-field-type' => 'type' }
                        - if file.type == 'SchematicFileWidget'
                          = f_widget.input :document_file_name, as: :hidden, input_html: { 'data-field-type' => 'document_file_name', name: '' }
                          = f_widget.input :document_id, as: :hidden, input_html: { 'data-field-type' => 'document_id' }
                        - else
                          = f_widget.input :url, as: :hidden, input_html: { 'data-field-type' => 'url' }
                      td.details
                        h5
                          - if file.type == 'SchematicFileWidget'
                            - case file.document.try(:type)
                            - when 'ImageFile'
                              i.fa.fa-file-image-o
                            - when 'PdfFile'
                              i.fa.fa-file-pdf-o
                            - when 'SketchfabFile'
                              span.fa-stack.fa-stack-half
                                i.fa.fa-file-o.fa-stack-1x
                                i.fa.fa-cube.fa-stack-1x.fa-stack-half
                            - else
                              i.fa.fa-file-o
                          - else
                            i.fa.fa-link
                          span= file.name
                        - if file.type == 'SchematicFileWidget'
                          p
                            - if file.document
                              = file.document.file_name
                            - else
                              | No document
                        - else
                          p= file.url
                        - if file.comment.present?
                          p.comment= plain_to_html file.comment
                      td
                        .actions
                          - if file.type == 'SchematicFileWidget'
                            a.edit-in-modal.btn.btn-sm.btn-link data-modal='#upload-popup' href=''
                              | Edit
                          - else
                            a.edit-in-modal.btn.btn-sm.btn-link data-modal='#schematic-repo-popup' href=''
                              | Edit
                          = f_widget.link_to_remove 'Delete', class: 'btn btn-sm btn-link'

      .box data-anchor='cad'
        .box-title.small-title
          h4 CAD
          .subheading Enclosures and custom parts
        .box-content
          .btn-group
            a.btn.btn-sm.btn-default.modal-open.modal-reset data-target='#upload-popup' data-field-type='CadFileWidget'
              i.fa.fa-cloud-upload>
              | Upload file
            a.btn.btn-sm.btn-default.modal-open.modal-reset data-target='#cad-repo-popup'
              i.fa.fa-link>
              | Link existing repository

          / # = render partial: 'projects/forms/table', locals: { f: f, id: 'cad-repo', widget_types: %w(CadRepoWidget), style: 'repository' }

          - if @project.widgets.where(type: %w(CadRepoWidget CadFileWidget)).any?
            table.table.table-decorated.table-hover.table-sortable
              tbody
                - @project.widgets.where(type: %w(CadRepoWidget CadFileWidget)).order(:position, :id).each do |file|
                  = f.simple_fields_for :widgets, file do |f_widget|
                    tr.fields
                      td
                        i.fa.fa-bars.handle
                        = f_widget.input :id, as: :hidden, input_html: { 'data-field-type' => 'id' }
                        = f_widget.input :position, as: :hidden, input_html: { 'data-field-type' => 'position', class: 'position' }
                        = f_widget.input :name, as: :hidden, input_html: { 'data-field-type' => 'name' }
                        = f_widget.input :comment, as: :hidden, input_html: { 'data-field-type' => 'comment' }
                        = f_widget.input :type, as: :hidden, input_html: { 'data-field-type' => 'type' }
                        - if file.type == 'CadFileWidget'
                          = f_widget.input :document_file_name, as: :hidden, input_html: { 'data-field-type' => 'document_file_name', name: '' }
                          = f_widget.input :document_id, as: :hidden, input_html: { 'data-field-type' => 'document_id' }
                        - else
                          = f_widget.input :url, as: :hidden, input_html: { 'data-field-type' => 'url' }
                      td.details
                        h5
                          - if file.type == 'CadFileWidget'
                            - case file.document.try(:type)
                            - when 'ImageFile'
                              i.fa.fa-file-image-o
                            - when 'SketchfabFile'
                              span.fa-stack.fa-stack-half
                                i.fa.fa-file-o.fa-stack-1x
                                i.fa.fa-cube.fa-stack-1x.fa-stack-half
                            - else
                              i.fa.fa-file-o
                          - else
                            i.fa.fa-link
                          span= file.name
                        - if file.type == 'CadFileWidget'
                          p
                            - if file.document
                              = file.document.file_name
                            - else
                              | No document
                        - else
                          p= file.url
                        - if file.comment.present?
                          p.comment= plain_to_html file.comment
                      td
                        .actions
                          - if file.type == 'CadFileWidget'
                            a.edit-in-modal.btn.btn-sm.btn-link data-modal='#upload-popup' href=''
                              | Edit
                          - else
                            a.edit-in-modal.btn.btn-sm.btn-link data-modal='#cad-repo-popup' href=''
                              | Edit
                          = f_widget.link_to_remove 'Delete', class: 'btn btn-sm btn-link'


= content_for :js do

  = render_pe_popup 'upload', widget_class: FileWidget, popup_style: 'upload'
  = render_pe_popup 'schematic-repo', widget_class: SchematicWidget, url_placeholder: 'Eg: https://upverter.com/honnet/69441ea47f5d22da/twi', url_hint: 'Supported: 123D Circuits, Fritzing, OSH Park, Upverter', popup_style: 'repository'
  = render_pe_popup 'cad-repo', widget_class: CadRepoWidget, url_placeholder: 'Eg: https://sketchfab.com/models/c0541f8dbd3d42829205516bf6a71f29', url_hint: 'Supported: Autodesk Fusion 360, Sketchfab, Youmagine', popup_style: 'repository'

  form#file-upload-form action="https://#{ENV['FOG_DIRECTORY']}.s3.amazonaws.com" enctype="multipart/form-data" method="post" style="display:none;"
    input name="key" type="hidden"
    input name="AWSAccessKeyId" type="hidden" value="#{ENV['AWS_ACCESS_KEY_ID']}"
    input name="acl" type="hidden" value="public-read"
    input name="policy" type="hidden"
    input name="signature" type="hidden"
    input name="success_action_status" type="hidden" value="201"
    input name="file" type="file" multiple='multiple'
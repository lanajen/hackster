/
  add libraries
  add usage instructions (steps?)

= content_for :head do
  = javascript_include_tag '//cdnjs.cloudflare.com/ajax/libs/ace/1.1.3/ace.js', charset: "utf-8"

= simple_nested_form_for @project, url: api_v1_project_path(@project), html: { id: 'software-form', data: { remote: true }, class: 'form-horizontal remote sortable' }, wrapper: :bootstrap3_horizontal do |f|

  input type='hidden' name='panel' value='software'
  input type='hidden' name='save' value='1'

  .pe-header
    h2 The software
    .subheading What is the code that powers this project?

  .row
    .col-md-8.col-md-offset-2
      = f.error_notification

      .box data-anchor='code'
        .box-content
          .btn-group
            a.btn.btn-sm.btn-default.modal-open.modal-reset data-target='#code-editor-popup'
              i.fa.fa-cloud-upload>
              | Upload or paste code
            a.btn.btn-sm.btn-default.modal-open.modal-reset data-target='#code-repository-popup'
              i.fa.fa-link>
              | Link existing repository

          - if @project.widgets.where(type: %w(CodeRepoWidget CodeWidget)).any?
            table.table.table-decorated.table-hover.table-sortable
              tbody
                - @project.widgets.where(type: %w(CodeRepoWidget CodeWidget)).each do |file|
                  = f.simple_fields_for :widgets, file do |f_file|
                    tr.fields
                      td
                        i.fa.fa-bars.handle
                        = f_file.input :id, as: :hidden, input_html: { 'data-field-type' => 'id' }
                        = f_file.input :position, as: :hidden, input_html: { 'data-field-type' => 'position', class: 'position' }
                        = f_file.input :name, as: :hidden, input_html: { 'data-field-type' => 'name' }
                        = f_file.input :comment, as: :hidden, input_html: { 'data-field-type' => 'comment' }
                        - if file.type == 'CodeWidget'
                          = f_file.input :raw_code, as: :hidden, input_html: { 'data-field-type' => 'raw_code' }
                          = f_file.input :language, as: :hidden, input_html: { 'data-field-type' => 'language' }
                        - else
                          = f_file.input :url, as: :hidden, input_html: { 'data-field-type' => 'url' }
                      td.details
                        h5
                          - if file.type == 'CodeWidget'
                            - if file.raw_code.present?
                              i.fa.fa-file-code-o
                            - else
                              i.fa.fa-file-o
                          - else
                            i.fa.fa-link
                          span= file.name
                        - if file.type == 'CodeWidget'
                          p= file.human_language
                        - else
                          p= file.url
                        - if file.comment.present?
                          p.comment= plain_to_html file.comment
                      td
                        .actions
                          - if file.type == 'CodeWidget'
                            a.edit-in-modal.btn.btn-sm.btn-link data-modal='#code-editor-popup' href=''
                              | Edit
                          - else
                            a.edit-in-modal.btn.btn-sm.btn-link data-modal='#code-repository-popup' href=''
                              | Edit
                          = f_file.link_to_remove 'Delete', class: 'btn btn-sm btn-link'


= content_for :js do

  = render_pe_popup 'code-repository', widget_class: CodeRepoWidget, url_placeholder: 'Eg: https://github.com/fritzing/fritzing-app', url_hint: 'Supported: Bitbucket, Codebender, Gist, Github', popup_style: 'repository'

  = render_pe_popup 'code-editor', widget_class: CodeWidget, popup_style: 'code_upload', width: 800

  form id='code-upload-form' action='/api/v1/code_files' method='post' enctype='multipart/form-data' style='display:none;'
    input type="file" name="file"

  javascript:
    $(function(){
      var cEditor = new ProjectCodeEditor('text', '0');
      cEditor.activate();
      window.cEditor = cEditor;

      cEditor.ace.getSession().on('change', function(e){
        $('#code-editor-form [data-field-type="raw_code"]').val(cEditor.ace.getValue());
        resizeModal('#code-editor-popup');
      });
    });
- if @project.widgets.where(type: widget_types).exists?
  table.table.table-decorated.table-hover#sortable
    tbody
      - @project.widgets.where(type: widget_types).order(:position, :id).each do |widget|
        = f.simple_fields_for :widgets, widget do |f_widget|
          tr.fields
            td
              i.fa.fa-bars.handle
              = f_widget.input :id, as: :hidden, input_html: { 'data-field-type' => 'id' }
              = f_widget.input :position, as: :hidden, input_html: { 'data-field-type' => 'position', class: 'position' }
              = f_widget.input :name, as: :hidden, input_html: { 'data-field-type' => 'name' }
              = f_widget.input :comment, as: :hidden, input_html: { 'data-field-type' => 'comment' }
              = render partial: "projects/forms/#{widget.identifier}_table_inputs", locals: { f_widget: f_widget, widget: widget }
            td.details
              = render partial: "projects/forms/#{widget.identifier}_table_details", locals: { f_widget: f_widget, widget: widget }
              - if widget.comment.present?
                p.comment= plain_to_html widget.comment
            td
              .actions
                a.edit-in-modal.btn.btn-sm.btn-link data-modal=modal_name_for_widget(widget, embed_id) href='javascript:void(0)'
                  | Edit
                = f_widget.link_to_remove 'Delete', class: 'btn btn-sm btn-link'